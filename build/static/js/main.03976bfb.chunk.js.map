{"version":3,"sources":["components/filter.js","components/persons-list.js","components/add-person-form.js","components/notofication.js","services/bookService.js","App.js","index.js"],"names":["Filter","filter","setFilter","type","value","onChange","event","target","PersonsList","persons","delPerson","personsToShow","person","name","toLowerCase","includes","map","key","id","number","onClick","AddPersonForm","newName","newPhone","addNewPerson","handleNewName","handleNewPhone","onSubmit","Notification","msg","err","msgStyle","background","fontSize","borderColor","borderStyle","borderRadius","padding","marginBottom","style","axios","get","then","response","data","newPerson","post","updatedPerson","console","log","put","delete","App","useState","setPersons","personFilter","setNewName","setNewPhone","error","topMessage","setTopMessage","useEffect","bookService","catch","alert","setMessage","timeout","setTimeout","preventDefault","existPerson","find","window","confirm","p","concat","ReactDOM","render","document","getElementById"],"mappings":"gNAqBeA,EAnBA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAMxB,OACE,8BACE,4CACE,2BACEC,KAAK,OACLC,MAAOH,EACPI,SAVc,SAACC,GACrBJ,EAAUI,EAAMC,OAAOH,aCkBZI,EArBK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASR,EAAwB,EAAxBA,OAAQS,EAAgB,EAAhBA,UAEhCC,EAAgBV,EAClBQ,EAAQR,QAAO,SAAAW,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASd,EAAOa,kBACnEL,EAEJ,OACE,oCACA,uCACA,4BACGE,EAAcK,KAAI,SAAAJ,GAAM,OACvB,wBAAIK,IAAKL,EAAOM,IACbN,EAAOC,KADV,WACmBD,EAAOO,OAD1B,OAEE,4BAAQC,QAAS,kBAAMV,EAAUE,KAAjC,iBCoBKS,EAjCO,SAAC,GAAD,IACpBC,EADoB,EACpBA,QACAC,EAFoB,EAEpBA,SACAC,EAHoB,EAGpBA,aACAC,EAJoB,EAIpBA,cACAC,EALoB,EAKpBA,eALoB,OAOpB,oCACE,gDACA,0BAAMC,SAAUH,GACd,6BACE,0CACE,2BACErB,KAAK,OACLC,MAAOkB,EACPjB,SAAUoB,KAEN,6BACR,2CACE,2BACEtB,KAAK,MACLC,MAAOmB,EACPlB,SAAUqB,MAIhB,6BACE,4BAAQvB,KAAK,UAAb,WCLOyB,EAtBM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAC3B,IAAKD,EACH,OAAO,KAGT,IAAME,EAAW,CACfC,WAAY,YACZC,SAAU,OACVC,YAAaJ,EAAM,MAAQ,QAC3BK,YAAa,QACbC,aAAc,MACdC,QAAS,YACTC,aAAc,QAGhB,OACE,yBAAKC,MAAOR,GACTF,I,gBCGQ,EAlBK,WAElB,OADYW,IAAMC,IAHF,gBAILC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgBxB,EAbG,SAAAC,GAEhB,OADYL,IAAMM,KARF,eAQkBD,GACvBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWxB,EARM,SAACG,EAAe7B,GAGnC,OAFA8B,QAAQC,IAAIF,EAAe7B,GACfsB,IAAMU,IAAN,UAdI,eAcJ,YAA0BhC,GAAM6B,GACjCL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAKxB,EAFG,SAAA1B,GAAE,OAAIsB,IAAMW,OAAN,UAlBN,eAkBM,YAA6BjC,KCgFtCkC,EA7FH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACR5C,EADQ,KACC6C,EADD,OAEoBD,mBAAS,IAF7B,mBAERE,EAFQ,KAEMrD,EAFN,OAGgBmD,mBAAS,IAHzB,mBAGR/B,EAHQ,KAGCkC,EAHD,OAIkBH,mBAAS,IAJ3B,mBAIR9B,EAJQ,KAIEkC,EAJF,OAKsBJ,mBAAS,CAACK,MAAO,EAAG7B,IAAK,KAL/C,mBAKR8B,EALQ,KAKIC,EALJ,KAOhBC,qBAAU,WACRC,IACGpB,MAAK,SAAAC,GAAQ,OAAIW,EAAWX,MAC5BoB,OAAM,SAAAjC,GAAG,OAAIkC,MAAMlC,QACrB,IAEH,IAAMmC,EAAa,SAACpC,GAAgC,IAA3B6B,EAA0B,uDAApB,EAAGQ,EAAiB,uDAAT,IACxCN,EAAc,CAAC/B,MAAK6B,UACpBS,YAAW,kBAAMP,EAAc,CAAC/B,IAAK,GAAI6B,MAAO,MAAKQ,IAsDvD,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcrC,IAAK8B,EAAW9B,IAAKC,IAAK6B,EAAWD,QACnD,kBAAC,EAAD,CACEzD,OAAQsD,EACRrD,UAAWA,IAEb,kBAAC,EAAD,CACEoB,QAASA,EACTC,SAAUA,EACVC,aA9De,SAAClB,GACpBA,EAAM8D,iBACN,IAAMC,EAAc5D,EAAQ6D,MAAK,SAAA1D,GAAM,OAAIA,EAAOC,OAASS,KAE3D,IAAI+C,GAAgBE,OAAOC,QAAP,UAAkBlD,EAAlB,2EAApB,CAEA,IAAMuB,EAAY,CAChBhC,KAAMS,EACNH,OAAQI,GAGN8C,EACFP,EAAyBjB,EAAWwB,EAAYnD,IAC7CwB,MAAK,SAAAC,GACJW,EAAW7C,EAAQO,KAAI,SAAAyD,GAAC,OAAIA,EAAEvD,KAAOyB,EAASzB,GAAKuD,EAAI9B,SAExDoB,OAAM,kBAAME,EAAW,kBAAD,OAAmBpB,EAAUhC,KAA7B,qCAAsE,EAAG,QAElGiD,EAAsBjB,GACrBH,MAAK,SAAAC,GACJsB,EAAW,SAAD,OAAUtB,EAAS9B,KAAnB,MACVyC,EAAW7C,EAAQiE,OAAO/B,OAE3BoB,OAAM,SAAAjC,GAAG,OAAIkC,MAAMlC,MAGtB0B,EAAW,IACXC,EAAY,IACZvD,EAAU,MAmCNuB,cApBgB,SAACnB,GACrBkD,EAAWlD,EAAMC,OAAOH,QAoBpBsB,eAjBiB,SAACpB,GACtBmD,EAAYnD,EAAMC,OAAOH,UAkBvB,kBAAC,EAAD,CACEK,QAASA,EACTR,OAAQsD,EACR7C,UAtCY,SAAAE,GAChB,GAAI2D,OAAOC,QAAP,iBAAyB5D,EAAOC,KAAhC,MAA0C,CAC5C,GAAID,EAAOM,GAAK,EAEd,YADA8C,MAAM,cAGRF,EAAsBlD,EAAOM,IAC1BwB,KAAKY,EAAW7C,EAAQR,QAAO,SAAAwE,GAAC,OAAIA,EAAEvD,KAAON,EAAOM,QACpD6C,OAAM,SAAAjC,GAAG,OAAIkC,MAAMlC,YC5D5B6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.03976bfb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, setFilter}) => {\n\n  const filterHandler = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <form>\n      <label>Filter \n        <input \n          type='text'\n          value={filter}\n          onChange={filterHandler}\n        />\n      </label>\n    </form>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonsList = ({ persons, filter, delPerson }) => {\n\n  const personsToShow = filter\n    ? persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n    : persons\n\n  return (\n    <>\n    <h3>Numbers</h3>\n    <ul>\n      {personsToShow.map(person => (\n        <li key={person.id}>\n          {person.name} — {person.number} \n          <button onClick={() => delPerson(person)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n    </>\n  )\n}\n\nexport default PersonsList","import React from 'react'\n\nconst AddPersonForm = ({ \n  newName, \n  newPhone, \n  addNewPerson,\n  handleNewName,\n  handleNewPhone\n}) => (\n  <>\n    <h3>Add a new person</h3>\n    <form onSubmit={addNewPerson}>\n      <div>\n        <label>Name  \n          <input\n            type='text'\n            value={newName}\n            onChange={handleNewName}\n          />\n        </label><br />\n        <label>Phone  \n          <input\n            type='tel'\n            value={newPhone}\n            onChange={handleNewPhone}\n          />\n        </label>\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  </>\n)\n\nexport default AddPersonForm","import React from 'react'\n\nconst Notification = ({ msg, err }) => {\n  if (!msg) {\n    return null\n  }\n\n  const msgStyle = {\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderColor: err ? 'red' : 'green',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '12px 15px',\n    marginBottom: '10px'\n  }\n\n  return (\n    <div style={msgStyle} >\n      {msg}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n// const serverURL = 'https://shielded-plateau-20658.herokuapp.com/api/persons'\nconst serverURL = '/api/persons'\n\nconst getFullBook = () => {\n  const req = axios.get(serverURL)\n  return req.then(response => response.data)\n}\n\nconst newRecord = newPerson => {\n  const req = axios.post(serverURL, newPerson)\n  return req.then(response => response.data)\n}\n\nconst updateRecord = (updatedPerson, id) => {\n  console.log(updatedPerson, id)\n  const req = axios.put(`${serverURL}/${id}`, updatedPerson)\n  return req.then(response => response.data)\n}\n\nconst delRecord = id => axios.delete(`${serverURL}/${id}`)\n\nexport default { getFullBook, newRecord, updateRecord, delRecord }","import React, { useEffect, useState } from 'react'\nimport Filter from './components/filter'\nimport PersonsList from './components/persons-list'\nimport AddPersonForm from './components/add-person-form'\nimport Notification from './components/notofication'\nimport bookService from './services/bookService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ personFilter, setFilter ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ topMessage, setTopMessage ] = useState({error: 0, msg: ''})\n\n  useEffect(() => {\n    bookService.getFullBook()\n      .then(response => setPersons(response))\n      .catch(err => alert(err))\n  }, [])\n\n  const setMessage = (msg, error=0, timeout=3000) => {\n    setTopMessage({msg, error})\n    setTimeout(() => setTopMessage({msg: '', error: 0}), timeout)\n  }\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    const existPerson = persons.find(person => person.name === newName)\n    \n    if (existPerson && !window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) return\n    \n    const newPerson = {\n      name: newName,\n      number: newPhone\n    }\n\n    if (existPerson) {\n      bookService.updateRecord(newPerson, existPerson.id)\n        .then(response => {\n          setPersons(persons.map(p => p.id !== response.id ? p : response))\n        })\n        .catch(() => setMessage(`Information of ${newPerson.name} has already removed from server.`, 1, 10000))\n    } else {\n      bookService.newRecord(newPerson)\n      .then(response => {\n        setMessage(`Added ${response.name}.`)\n        setPersons(persons.concat(response))}\n      )\n      .catch(err => alert(err))      \n    }\n    \n    setNewName('')\n    setNewPhone('')\n    setFilter('')\n  }\n\n  const delPerson = person => {\n    if (window.confirm(`Delete ${person.name}?`)) {      \n      if (person.id < 5) {\n        alert(\"Imposible!\") // VIP persons!\n        return\n      }\n      bookService.delRecord(person.id)\n        .then(setPersons(persons.filter(p => p.id !== person.id)))\n        .catch(err => alert(err))\n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewPhone = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification msg={topMessage.msg} err={topMessage.error} />\n      <Filter\n        filter={personFilter}\n        setFilter={setFilter}\n      />\n      <AddPersonForm\n        newName={newName}\n        newPhone={newPhone}\n        addNewPerson={addNewPerson}\n        handleNewName={handleNewName}\n        handleNewPhone={handleNewPhone}\n      />\n      <PersonsList\n        persons={persons}\n        filter={personFilter}\n        delPerson={delPerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}